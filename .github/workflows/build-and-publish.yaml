name: Build and publish

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"


permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.6.0
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          cosign-release: 'v2.4.0'

      # Lowercase REPO_OWNER which is required for containers
      - name: Set lowercase REPO_OWNER
        run: |
          REPO_OWNER=${{ github.repository_owner }}
          echo "REPO_OWNER=${REPO_OWNER,,}" >>${GITHUB_ENV}

      - name: Generate container tags and labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_OWNER }}/traefik-forward-auth
          # generate semver tags and 'latest' tag
          tags: |
            type=edge,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set variables
        run: |
          BUILD_ID=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          BUILD_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          COMMIT_HASH=$(echo "${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}" | head -c 7)

          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

          echo "BUILD_ID: '$BUILD_ID'"
          echo "BUILD_VERSION: '$BUILD_VERSION'"
          echo "BUILD_DATE: '$BUILD_DATE'"
          echo "COMMIT_HASH: '$COMMIT_HASH'"

          BUILDINFO_PKG="github.com/italypaleale/traefik-forward-auth/pkg/buildinfo"
          BUILD_LDFLAGS="-X ${BUILDINFO_PKG}.Production=1 -X ${BUILDINFO_PKG}.AppVersion=${BUILD_VERSION} -X ${BUILDINFO_PKG}.BuildId=${BUILD_ID} -X ${BUILDINFO_PKG}.BuildDate=${BUILD_DATE} -X ${BUILDINFO_PKG}.CommitHash=${COMMIT_HASH} -buildid=${BUILD_ID}"

          echo "BUILD_LDFLAGS=$BUILD_LDFLAGS" >> $GITHUB_ENV

          echo "BUILD_LDFLAGS: '$BUILD_LDFLAGS'"

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app for all architectures
        run: |
          echo -e "\n###\nFetch Go dependencies\n"
          go get -v

          echo -e "\n###\nBuilding for amd64\n"
          mkdir -p .bin/linux-amd64
          CGO_ENABLED=0 \
          GOOS=linux \
          GOARCH=amd64 \
            go build \
              -v \
              -o .bin/linux-amd64/traefik-forward-auth \
              -trimpath \
              -ldflags "${{ env.BUILD_LDFLAGS }}" \
              ./cmd/traefik-forward-auth

          echo -e "\n###\nBuilding for arm64\n"
          mkdir -p .bin/linux-arm64
          CGO_ENABLED=0 \
          GOOS=linux \
          GOARCH=arm64 \
            go build \
              -v \
              -o .bin/linux-arm64/traefik-forward-auth \
              -trimpath \
              -ldflags "${{ env.BUILD_LDFLAGS }}" \
              ./cmd/traefik-forward-auth

          echo -e "\n###\nBuilding for armhf\n"
          mkdir -p .bin/linux-arm
          CGO_ENABLED=0 \
          GOOS=linux \
          GOARCH=arm
          GOARM=7 \
            go build \
              -v \
              -o .bin/linux-arm/traefik-forward-auth \
              -trimpath \
              -ldflags "${{ env.BUILD_LDFLAGS }}" \
              ./cmd/traefik-forward-auth

          echo -e "\n###\nEnsure all binaries are executable\n"
          chmod +x .bin/*/traefik-forward-auth

          echo -e "\n###\nCompilation done\n"
          ls -al .bin .bin/*

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        id: docker-build-push
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          context: .
          push: true

      - name: Binaries attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '.bin/*/traefik-forward-auth'

      - name: Container image attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: 'ghcr.io/${{ env.REPO_OWNER }}/traefik-forward-auth'
          subject-digest: ${{ steps.docker-build-push.outputs.digest }}
          push-to-registry: true
